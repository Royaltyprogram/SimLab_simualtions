{
	"componentName": "CartPole",
	"contributorGithub": "Royaltyprogram",
	"contributorImage": "https://avatars.githubusercontent.com/u/165759805?v=4&size=64",
	"createdAt": 20241209,
	"description": "# CartPole Simulation: Mastering Balance with Reinforcement Learning\n\nThis simulation explores the CartPole problem, a fundamental benchmark in reinforcement learning. The objective is to balance a pole (Pole) on a movable cart (Cart) by controlling the cart's movements. By modeling physical dynamics and applying reinforcement learning algorithms, this simulation demonstrates the interplay between motion control and learning-based optimization.\n\n---\n\n## Physical Model\n\nThe CartPole system is described by Newtonian mechanics and rotational dynamics. The following equations govern its motion:\n\n### State Variables\n- \\( x \\): Horizontal position of the cart\n- \\( \\dot{x} \\): Horizontal velocity of the cart\n- \\( \\theta \\): Angle of the pole (relative to vertical)\n- \\( \\dot{\\theta} \\): Angular velocity of the pole\n\n### Physical Constants\n- \\( g \\): Gravitational acceleration (\\( g = 9.8 \\, \\text{m/s}^2 \\))\n- \\( m_c \\): Mass of the cart\n- \\( m_p \\): Mass of the pole\n- \\( l \\): Length of the pole\n- \\( F \\): External force applied to the cart\n\n### Equations of Motion\n1. **Acceleration of the cart**:\n   \\[\n   \\ddot{x} = \\frac{F + m_p \\cdot l \\cdot (\\dot{\\theta}^2 \\cdot \\sin\\theta - \\ddot{\\theta} \\cdot \\cos\\theta)}{m_c + m_p}\n   \\]\n\n2. **Angular acceleration of the pole**:\n   \\[\n   \\ddot{\\theta} = \\frac{g \\cdot \\sin\\theta - \\cos\\theta \\cdot \\frac{F + m_p \\cdot l \\cdot \\dot{\\theta}^2 \\cdot \\sin\\theta}{m_c + m_p}}{l \\cdot \\left(\\frac{4}{3} - \\frac{m_p \\cdot \\cos^2\\theta}{m_c + m_p}\\right)}\n   \\]\n\n---\n\n## Reinforcement Learning Application\n\nThe CartPole simulation integrates reinforcement learning concepts, utilizing **State**, **Action**, and **Reward** to achieve balance:\n\n### State Space\nThe state consists of the system's dynamic variables:\n\\[\ns = (x, \\dot{x}, \\theta, \\dot{\\theta})\n\\]\n\n### Action Space\nTwo discrete actions can be performed:\n\\[\na \\in \\{\\text{Left Force}, \\text{Right Force}\\}\n\\]\n\n### Reward Function\nThe system receives:\n- A reward of \\( +1 \\) for each time step the pole remains upright\n- A termination condition when \\( |\\theta| > \\theta_{\\text{max}} \\) or \\( |x| > x_{\\text{max}} \\)\n\n### Objective\nThe objective is to maximize the cumulative reward, extending the duration of successful pole balancing.\n\n---\n\n## Algorithms\n\nThis simulation leverages two key algorithms:\n\n1. **Q-learning**:\n   \\[\n   Q(s, a) \\leftarrow Q(s, a) + \\alpha \\left( r + \\gamma \\cdot \\max_{a'} Q(s', a') - Q(s, a) \\right)\n   \\]\n   where \\( \\alpha \\) is the learning rate, \\( \\gamma \\) is the discount factor, and \\( r \\) is the reward.\n\n2. **Deep Q-Networks (DQN)**:\n   Uses neural networks to approximate \\( Q(s, a) \\) values in continuous state spaces.\n\n---\n\n## Observational Guide\n\n### Key Observations\n1. **Balancing Success**:\n   - Smooth control of cart movements results in longer balancing duration.\n2. **Action-Reaction Dynamics**:\n   - Immediate responses to changes in angle are crucial for maintaining stability.\n\n---\n\n## Real-World Applications\n\n1. **Robotics**:\n   - Control systems for bipedal robots and robotic arms.\n2. **Aerospace**:\n   - Satellite stabilization and orientation.\n3. **Entertainment**:\n   - Simulated physics in gaming and animation.\n\n---\n\n## Educational Objectives\n\nThis simulation provides hands-on learning in:\n- Dynamics of motion and control systems\n- Fundamental reinforcement learning concepts\n- Application of Q-learning and DQN to real-world problems\n\n---\n\n## Extended Investigations\n\nStudents can explore:\n1. The effect of learning rate and discount factor on performance.\n2. Comparison of Q-learning and DQN in balancing efficiency.\n3. Real-world parallels in robotic and aerospace applications.\n",
	"githubRepo": "Royaltyprogram/SimLab",
	"likes": 0,
	"name": "Q-Learning CartPole Simulation",
	"simulationFilename": "CartPole",
	"thumbnailPath": "https://firebasestorage.googleapis.com/v0/b/simlab-3a966.firebasestorage.app/o/thumbnails%2FCartPole.png?alt=media&token=e4b71148-11c7-49b6-82c2-3f6b7c5c414d",
	"updatedAt": 20241209,
	"views": 0
}